CVE: CVE-2020-36158
curation_level: 2
reported_date: '2020-12-06'
announced_date: '2021-01-05'
published_date: '2021-01-05'
description: |
  There was a failure to check for destination size before copying memory.
  This could lead to attackers executing arbitrary code or trigger a buffer
  overflow since the size of the data was not properly being checked.
bounty:
  amt:
  announced:
  url:
reviews: []
bugs_instructions: |
  What bugs are involved in this vulnerability?

  Please list bug IDs to https://bugzilla.kernel.org/

  Bug ID's can appear in several places:
    * Mentioned in commit messages
    * Mentioned in mailing list discussions
    * References from NVD entry
    * Various other places
bugs: []
fixes:
- commit: 5c455c5ab332773464d02ba17015acdca198f03d
  note: Manually confirmed
vcc_instructions: |
  The vulnerability-contributing commits.

  These are found by our tools by traversing the Git Blame history, where we
  determine which commit(s) introduced the functionality.

  Look up these VCC commits and verify that they are not simple refactorings,
  and that they are, in fact introducing the vulnerability into the system.
  Often, introducing the file or function is where the VCC is, but VCCs can be
  anything.

  Place any notes you would like to make in the notes field.
vccs:
- commit: 5e6e3a92b9a4c9416b17f468fa5c7fa2233b8b4e
  note: Discovered automatically by archeogit.
- commit: a5ffddb70c5cab29fa00e2fdf12217b64b940796
  note: Discovered automatically by archeogit.
- commit: acebe8c10a6eabdb9c34370a774b5b3fcbae3ff4
  note: Discovered automatically by archeogit.
upvotes_instructions: |
  For the first round, ignore this upvotes number.

  For the second round of reviewing, you will be giving a certain amount of
  upvotes to each vulnerability you see. Your peers will tell you how
  interesting they think this vulnerability is, and you'll add that to the
  upvotes score on your branch.
upvotes:
unit_tested:
  code: false
  code_answer: false
  fix: false
  fix_answer: false
discovered:
  question: |
  answer: "2020-12-06"
  automated: false
  contest: false
  developer: true
autodiscoverable:
  note: |
    A tool could have determined that buffer overflow was possible such as 
    a fuzzer trying to pass in a large enough buffer to the driver code. 
  answer: true
specification:
  note: |
      There is no written specification for the Linux Kernel to check memory sizes.
      It would be up to the developers to make sure their code would be able to 
      handle certain edge cases such as a buffer being too large.
  answer: false
subsystem:
  name: ["drivers", "net", "wireless"]
  note: |
    The directory structure is drivers/net/wireless/marvell/mwifiex. This vulnerability
    is related to a networking driver for wireless communications.
interesting_commits:
  question: |
    Are there any interesting commits between your VCC(s) and fix(es)?

    Use this to specify any commits you think are notable in some way, and
    explain why in the note.

    Example interesting commits:
      * Mentioned as a problematic commit in the past
        e.g. "This fixes regression in commit xys"
      * A significant rewrite in the git history
      * Other commits that fixed a similar issue as this vulnerability
      * Anything else you find interesting.
  commits:
  - commit:
    note:
  - commit:
    note:
i18n:
  question: |
    Was the feature impacted by this vulnerability about internationalization
    (i18n)?

    An internationalization feature is one that enables people from all
    over the world to use the system. This includes translations, locales,
    typography, unicode, or various other features.

    Answer should be true or false
    Write a note about how you came to the conclusions you did, regardless of
    what your answer was.
  answer: false
  note: |
    Although SSID can have non-English characters that could be larger than 1 byte,
    this vulnerability wouldn't check for SSID length regardless of the characters used.
sandbox:
  answer: false
  note: |
    This was not a permissions or privilege issue related vulnerability. User input 
    was just not being validated completely before being used.
ipc:
  question: |
    Did the feature that this vulnerability affected use inter-process
    communication? IPC includes OS signals, pipes, stdin/stdout, message
    passing, and clipboard. Writing to files that another program in this
    software system reads is another form of IPC.

    Answer must be true or false.
    Write a note about how you came to the conclusions you did, regardless of
    what your answer was.
  answer: false
  note: |
    This vulnerability had to do with a buffer overflow vulnerability in a 
    wireless networking driver.
discussion:
  discussed_as_security: false
  any_discussion: false
  note: |
    According to lore.kernel.org the only post was from Zhang Xiaohui 
    about the issue with a posted fix with no replies.
vouch:
  question: |
    Was there any part of the fix that involved one person vouching for
    another's work?

    This can include:
      * signing off on a commit message
      * mentioning a discussion with a colleague checking the work
      * upvoting a solution on a pull request

    Answer must be true or false.
    Write a note about how you came to the conclusions you did, regardless of what your answer was.
  answer:
  note:
stacktrace:
  any_stacktraces: false
  stacktrace_with_fix: false
  note: |
    There was no stacktrace provided when the vulnerability was reported
forgotten_check:
  answer: true
  note: |
    The fix involved checking the length of the input before attempting to 
    use the input in a memcpy call.
order_of_operations:
  answer: false
  note: |
    Code needed to be added to resolve this vulnerability. No code had to be 
    rearranged or re-ordered.
lessons:
  defense_in_depth:
    applies:
    note:
  least_privilege:
    applies:
    note:
  frameworks_are_optional:
    applies:
    note:
  native_wrappers:
    applies:
    note:
  distrust_input:
    applies: true
    note: |
      User input is not trusted and its length is checked to ensure that a buffer
      overflow does not occur which could lead to a crash or arbitrary code execution.
  security_by_obscurity:
    applies:
    note:
  serial_killer:
    applies:
    note:
  environment_variables:
    applies:
    note:
  secure_by_default:
    applies:
    note:
  yagni:
    applies:
    note:
  complex_inputs:
    applies:
    note:
mistakes:
  answer: |
    There was a lapse because the developer introducing the vulnerability forgot 
    to check the size of the SSID input before copying it into a buffer.
CWE:
- 120
CWE_note: |
  CWE as registered in the NVD. If you are curating, check that this
  is correct and replace this comment with "Manually confirmed".
nickname_instructions: |
  A catchy name for this vulnerability that would draw attention it.
  If the report mentions a nickname, use that.
  Must be under 30 characters. Optional.
nickname:
CVSS: CVSS:3.1/AV:L/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:H
